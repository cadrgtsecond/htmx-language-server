use phf::phf_map;

pub static ATTRIBUTES: &[&str] = &[
    "hx-get",
    "hx-post",
    "hx-on*",
    "hx-push-url",
    "hx-select",
    "hx-select-oob",
    "hx-swap",
    "hx-swap-oob",
    "hx-target",
    "hx-trigger",
    "hx-vals",
    "hx-boost",
    "hx-confirm",
    "hx-delete",
    "hx-disable",
    "hx-disabled-elt",
    "hx-disinherit",
    "hx-encoding",
    "hx-ext",
    "hx-headers",
    "hx-history",
    "hx-history-elt",
    "hx-include",
    "hx-indicator",
    "hx-inherit",
    "hx-params",
    "hx-patch",
    "hx-preserve",
    "hx-prompt",
    "hx-put",
    "hx-replace-url",
    "hx-request",
    "hx-sync",
    "hx-validate",
    "hx-vars",
    
];

pub static DESCRIPTIONS: phf::Map<&'static str, &'static str> = phf_map! {
    "hx-get" => "issues a GET to the specified URL",
    "hx-post" => "issues a POST to the specified URL",
    "hx-on*" => "handle events with inline scripts on elements",
    "hx-push-url" => "push a URL into the browser location bar to create history",
    "hx-select" => "select content to swap in from a response",
    "hx-select-oob" => "select content to swap in from a response, somewhere other than the target (out of band)",
    "hx-swap" => "controls how content will swap in (outerHTML, beforeend, afterend, â€¦)",
    "hx-swap-oob" => "mark element to swap in from a response (out of band)",
    "hx-target" => "specifies the target element to be swapped",
    "hx-trigger" => "specifies the event that triggers the request",
    "hx-vals" => "add values to submit with the request (JSON format)",
    "hx-boost" => "add progressive enhancement for links and forms",
    "hx-confirm" => "shows a confirm() dialog before issuing a request",
    "hx-delete" => "issues a DELETE to the specified URL",
    "hx-disable" => "disables htmx processing for the given node and any children nodes",
    "hx-disabled-elt" => "adds the disabled attribute to the specified elements while a request is in flight",
    "hx-disinherit" => "control and disable automatic attribute inheritance for child nodes",
    "hx-encoding" => "changes the request encoding type",
    "hx-ext" => "extensions to use for this element",
    "hx-headers" => "adds to the headers that will be submitted with the request",
    "hx-history" => "prevent sensitive data being saved to the history cache",
    "hx-history-elt" => "the element to snapshot and restore during history navigation",
    "hx-include" => "include additional data in requests",
    "hx-indicator" => "the element to put the htmx-request class on during the request",
    "hx-inherit" => "control and enable automatic attribute inheritance for child nodes if it has been disabled by default",
    "hx-params" => "filters the parameters that will be submitted with a request",
    "hx-patch" => "issues a PATCH to the specified URL",
    "hx-preserve" => "specifies elements to keep unchanged between requests",
    "hx-prompt" => "shows a prompt() before submitting a request",
    "hx-put" => "issues a PUT to the specified URL",
    "hx-replace-url" => "replace the URL in the browser location bar",
    "hx-request" => "configures various aspects of the request",
    "hx-sync" => "control how requests made by different elements are synchronized",
    "hx-validate" => "force elements to validate themselves before a request",
    "hx-vars" => "adds values dynamically to the parameters to submit with the request (deprecated, please use hx-vals)",
    
};
